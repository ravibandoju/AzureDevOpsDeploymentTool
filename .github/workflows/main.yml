name: Example Workflow

on:
  push:
    branches:
      - main  # or whichever branch you want this workflow to trigger on

# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     # Map a step output to a job output
#     outputs:
#       output1: ${{ steps.step1.outputs.test }}
#       output2: ${{ steps.step2.outputs.test }}
#     steps:
#       - id: step1
#         run: |
#           TOKEN1=some_value
#           echo "::add-mask::$TOKEN1"
#           echo "test=$TOKEN1" >> "$GITHUB_OUTPUT"
#           echo $TOKEN1
#       - id: step2
#         run: echo "test=world" >> "$GITHUB_OUTPUT"
#   job2:
#     runs-on: ubuntu-latest
#     needs: job1
#     steps:
#       - env:
#           OUTPUT1: ${{needs.job1.outputs.output1}}
#           OUTPUT2: ${{needs.job1.outputs.output2}}
#         run: echo "$OUTPUT1 $OUTPUT2"

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: Set Secret Value (Simulated)
        id: set_secret
        run: |
          key=value
          echo "::add-mask::$TOKEN1"
          echo "masked_secret=$TOKEN1" >> "$GITHUB_OUTPUT"

  job2:
    needs: job1  # job2 depends on job1
    runs-on: ubuntu-latest
    steps:
      - name: Use Secret in job2
        run: |
          echo "The masked secret is: ${{ needs.job1.outputs.masked_secret }}"

      - name: Check
        run: |
          if [ ${{ needs.job1.outputs.masked_secret }} == "value" ]; then
            echo "SECRET_VALUE matches the expected value."
          else
            echo "SECRET_VALUE does not match the expected value."
            exit 1  # Exit with a non-zero status if the check fails
          fi
